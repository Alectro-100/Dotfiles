#!/usr/bin/env bash

# Color setup (non-heavy, consistent with your system)
HL="\033[1m"
NC="\033[0m"
MSG_COL="\033[38;2;255;240;200m"
RED="\033[38;2;255;0;0m"

# Paths and computed values
DISK_IMG="/data/VMs/Linux_LFS.raw"
ISO="/data/VMs/Archlinux_x86_64.iso"
FORMAT="${DISK_IMG##*.}"
RAM="$(( $(awk '/MemTotal/ { print $2 }' /proc/meminfo) / 1640 ))"

# Flags
MODE=""
FULL_SCREEN=""

# Usage message
function Usage() {
    printf "%b\n" \
        "${HL}Usage${NC}: $(basename "$0") [boot] [fs]" "" \
        "  ${MSG_COL}boot${NC}         Boot from ISO + disk image" \
        "  ${MSG_COL}fs${NC}           Fullscreen mode" ""
    exit 1
}

# Error handler
function ERROR() {
    printf "%b\n" "${RED}[ERROR]${NC} $1"
    exit 1
}

# Check paths exist
[[ -f "$DISK_IMG" ]] || ERROR "DISK Image '${DISK_IMG}' does not exist"
[[ -f "$ISO" ]] || ERROR "ISO '${ISO}' does not exist"

# Parse args
for arg in "$@"; do
    case "$arg" in
        boot) MODE="boot" ;;
        fs) FULL_SCREEN="-full-screen" ;;
        -h|--help) Usage ;;
        *) Usage ;;
    esac
done

# Boot VM with ISO
function boot_VM() {
    printf "%b\n" \
        "${HL}Booting VM (ISO + Disk)${NC}" \
        "  ${MSG_COL}DISK${NC}:   $DISK_IMG" \
        "  ${MSG_COL}FORMAT${NC}: $FORMAT" \
        "  ${MSG_COL}ISO${NC}:    $ISO" \
        "  ${MSG_COL}RAM${NC}:    ${RAM}MB" ""
    
    qemu-system-x86_64 \
        -m "$RAM" \
        -cpu EPYC-v4 \
        -vga qxl \
        -display gtk,gl=on,show-menubar=off,zoom-to-fit=on \
        -boot d \
        -enable-kvm \
        -drive file="$DISK_IMG",media=disk,format="$FORMAT",if=virtio \
        -drive file="$ISO",media=cdrom \
        $FULL_SCREEN
}

# Start VM from disk
function start_VM() {
    printf "%b\n" \
        "${HL}Starting VM (Disk only)${NC}" \
        "  ${MSG_COL}DISK${NC}:   $DISK_IMG" \
        "  ${MSG_COL}FORMAT${NC}: $FORMAT" \
        "  ${MSG_COL}RAM${NC}:    ${RAM}MB" ""

    qemu-system-x86_64 \
        -m "$RAM" \
        -cpu EPYC-v4 \
        -vga qxl \
        -display gtk,gl=on,show-menubar=off \
        -enable-kvm \
        -audiodev pa,id=devpa \
        -drive file="$DISK_IMG",media=disk,format="$FORMAT",if=virtio \
        $FULL_SCREEN
}

# Entry logic
[[ "$MODE" == "boot" ]] && boot_VM || start_VM

