### Inner gaps
gaps inner 4

### Defaut Font
font pango: SourceCodePro Large 6

### Start foot server
exec --no-startup-id foot --server=/tmp/foot.sock
exec --no-startup-id alacritty --daemon

### Policykit agent
exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1

### Autotiling
exec --no-startup-id autotiling

### What's being played now?, show it in the waybar
exec --no-startup-id $HOME/.bin/NowPlaying

### Easyeffects
exec --no-startup-id bash -c \
      '$( (swaymsg exec flatpak run com.github.wwmm.easyeffects) ; sleep 5 ; swaymsg "[app_id="com.github.wwmm.easyeffects"] move scratchpad" )'

### Sway lock
exec --no-startup-id swayidle -w \
        timeout 120 ".config/sway/lock_screen/lock_screen" \
        resume "swaymsg 'output * power on'" \
        before-sleep "swaylock --daemonize --image $HOME/.config/sway/lock_screen/bg.jpg"

### Waybar
bar {
    swaybar_command waybar
}

### Mod1 for Alt key. Mod4 for Win key
set $mod Mod4

### Vim bindings everywhere
set $left h
set $down j
set $up k
set $right l

### My Application launcher
set $menu_wofi wofi -W 40% -H 32% --gtk-dark --allow-images --config $HOME/.config/wofi/wofi.conf --allow-markup --hide-scroll --prompt="Search" --show drun
set $menu_rofi rofi -show-icons -font Hack -theme material -show drun

### Output devices
    output * {
        # My Wallpaper
        background wallpapers/main.wallpaper fill
        mode 1920x1080@144Hz
        scale 1
        transform normal
        scale_filter smart
        max_render_time off
        render_bit_depth 8
        subpixel rgb
        adaptive_sync on
        allow_tearing yes
        color_profile icc /usr/share/color/icc/colord/sRGB.icc
    }

### Cursor will go vanish in 6 seconds (Seat devices)
    seat * hide_cursor 1000

### Enable Xwayland
xwayland enabled

### Input devices

    # Any Keyboard
    input type:keyboard {
        xkb_layout us,es,ru
        repeat_delay 160
        repeat_rate 60
    }

    # Optical Mouse
    input 12538:768:USB_Optical_Mouse {
        natural_scroll disabled
        pointer_accel 1
        dwt enabled
        accel_profile adaptive
    }

    # Any Trackpad
    input type:touchpad {
        dwt enabled              # disable while typing
        natural_scroll enabled   # Inverted scroll
        tap enabled              # enable taps (should not be disabled)
        tap_button_map lrm       # lmr {(1 finger tap left click) (2 finger tap right click) (3 finger tap middle click)}
        pointer_accel 1
        drag enabled
    }


### Key bindings

    # Bring my Text-fu terminal
    # foot
    bindsym $mod+Return exec footclient --server-socket=/tmp/foot.sock
    # alacritty
    bindsym $mod+Shift+Return exec alacritty

    # Good File Manager
    bindsym Alt+E exec bash -c "XDG_CURRENT_DESKTOP=KDE GTK_THEME=Adwaita:dark QT_QPA_PLATFORMTHEME=qt6 dolphin"

    # Kill the focused windows because sometimes it feels good
    bindsym $mod+q kill
    bindsym Alt+F4 kill

    # Lauch wofi, my friend who fetches all the applications for me
    bindsym Alt+Space exec $menu_wofi
    bindsym Alt+Shift+Space exec $menu_rofi

    bindsym $mod+N exec $HOME/.config/waybar/scripts/application_launcher

    # Mouse for dragging.
    floating_modifier $mod normal

    # Reload the configuration file and start the waybar
    bindsym $mod+Shift+c exec swaymsg reload

    # Exit sway (Kicks you out of your Wayland session)
    bindsym $mod+Shift+E exec swaymsg exit

    # Move your focus around, with VIM bindings!
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window in floating mode, VIM like
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    # Exactly same thing, but with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    bindsym $mod+Ctrl+$up resize shrink height 14px
    bindsym $mod+Ctrl+$down resize grow height 14px
    bindsym $mod+Ctrl+$left resize shrink width 14px
    bindsym $mod+Ctrl+$right resize grow width 14px

### Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6


### Layout stuff:
    # decide the spawn side of the new window
    bindsym $mod+B splith
    bindsym $mod+V splitv
    # Toggle btween splith and splitv
    bindsym $mod+TAB splitt
    # Pop the stacking window from the container
    bindsym $mod+U split none
    # Switch the current container between different layout styles
    bindsym $mod+S layout stacking
    bindsym $mod+W layout tabbed
    bindsym $mod+E layout toggle split
    # Fullscreen!
    bindsym $mod+F fullscreen
    # Jump the focus between tiling and floating mode
    bindsym $mod+Shift+Space floating toggle
    # Swap focus between the tiling area and the floating area
    bindsym $mod+Space focus mode_toggle
    # Move focus to the parent container
    bindsym $mod+A focus parent

### Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # Move the focused window into scratchpad because It's deamon
    bindsym $mod+Shift+minus move scratchpad
    # Cycle through the windows inside scratchpad.
    bindsym $mod+minus scratchpad show

### Resizing containers:
    bindsym $mod+r mode resize
    mode resize {
        bindsym $up resize shrink height 14px
        bindsym $down resize grow height 14px
        bindsym $left resize shrink width 14px
        bindsym $right resize grow width 14px

        bindsym Return mode default
        bindsym Escape mode default
    }

### Utilities:
    # Special keys to adjust volume via PulseAudio
    bindsym --locked {
        XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
        XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
        XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
        XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    }

    # Special keys to adjust brightness via brightnessctl
    bindsym --locked {
        XF86MonBrightnessDown exec brightnessctl set 5%-
        XF86MonBrightnessUp exec brightnessctl set 5%+
    }

    ## Win+Alt or $mod+Alt keybindings for systemctl related settings

    # What's my selected screen resolution?
    bindsym $mod+Shift+G exec bash -c \
        '$(Resolution="$(slurp)" && notify-send "$Resolution")'

    # Shutting down... Because I need a nap, you deserve one too (Mod+Alt+Shift+P)
    bindsym $mod+Alt+Shift+P exec bash -c \
        '$(notify-send "Shutting down... because I need a nap" ; sleep 2 ; systemctl poweroff --now)'

    # Shutting down ($mod+Alt+P)
    bindsym $mod+Alt+P exec bash -c \
        '$(swaymsg exit ; systemctl poweroff --now)'

    # Sometimes life just needs refresh ($mod+Alt+Shift+R)
    bindsym $mod+Alt+Shift+R exec bash -c \
        '$(notify-send "REBOOTING... Sometimes you need to restart!" ; sleep 2 ; systemctl reboot --now)'

    # Just Reboot (Mod+Alt+R)
    bindsym $mod+Alt+R exec bash -c \
        '$(swaymsg exit ; systemctl reboot --now)'

    # I'm going Sleep (Mod+Alt+Shift+delete)
    bindsym $mod+Alt+Shift+delete exec bash -c \
        '$(notify-send "I need some Rest"; sleep 2 ; systemctl suspend --now)'

    # Sleep (Alt+Ctrl+delete)
    bindsym $mod+Alt+delete exec bash -c \
        '$(systemctl suspend --now)'

    # Hybrid sleep, like sleep but cooler (Mod+Alt+S)
    bindsym $mod+Alt+S exec bash -c \
        '$(systemctl hybrid-sleep --now)'

    # Execute whatever the hell that script does... We don't judge
    bindsym $mod+Z exec bash -c \
        '$(foot -e $HOME/.scripts/exec_me)'

    # Journal time: Let's document the mess
    bindsym Alt+J exec bash -c \
        '$(foot -e $HOME/.scripts/JR)'

    # List of Emojies in rofi-emoji
    bindsym Alt+Shift+E exec bash -c \
        '$(rofi -modi emoji -show emoji)'

    # Start recording fullscreen! (Mod+Alt+V)
    bindsym $mod+Alt+V exec bash -c \
        '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=h264_nvenc -p preset=fast --framerate=40 --audio="$(pactl get-default-sink).monitor" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'

    # Start recording on selected ratio of the screen (Mod+Alt+B)
    bindsym $mod+Alt+B exec bash -c \
        '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=h264_nvenc -p preset=fast --framerate=40 --audio="$(pactl get-default-sink).monitor" -g "$(slurp)" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'

    # Stop recording send INT sig to the recorder (Mod+Alt+C)
    bindsym $mod+Alt+C exec bash -c \
        '$(kill -INT $(pidof wf-recorder))'

    # Take screenshot of fullscreen! (Mod+PrtSc)
    bindsym $mod+Print exec bash -c \
        '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'

    # Screenshot of selected area (Mod+Shift+S)
    bindsym $mod+Shift+S exec bash -c \
        '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim -g "$(slurp)" "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'

    # System monitors
    # htop
    bindsym Ctrl+Shift+Escape exec bash -c \
        '$(  foot -e htop ||  foot -e btop )'
    # btop
    bindsym Ctrl+Escape exec bash -c \
        '$( foot -e btop || foot -e htop )'
    # Plasma system monitor
    bindsym $mod+Escape exec bash -c \
        '$( XDG_CURRENT_DESKTOP=KDE GTK_THEME=Adwaita:dark plasma-systemmonitor || ( foot -e htop || sudo pacman -Sy htop --noconfirm))'

    ### Toggle keyboard layout
    bindsym $mod+Alt+space input type:keyboard xkb_switch_layout next

    ### Create cava windows to look cool
    bindsym $mod+P exec "$HOME/.bin/CavaInstances"
    bindsym $mod+O exec "$HOME/.bin/CavaInstances CLEAN"

    ### Keyboard centric browser
    bindsym Alt+B exec qutebrowser

    ### Window rules
    for_window {

        # Set opacity for all windows
        [app_id=".*"] opacity 0.9898
        # Border of newly spawned window
        [class=".*"] border pixel 1
        # Border of floating window
        [class=".*"] default_floating_border pixel 1
        # Transparancy levels for applications
        [app_id="foot"] opacity 0.98
        [app_id="waterfox|kitty"] opacity 1
        # Enabele floating don't tile
        [app_id="^waterfox$|^com.rtosta.zapzap$|^org.pulseaudio.pavucontrol$|^pavucontrol$|^com.github.wwmm.easyeffects"] floating enable
        [app_id="^org.kde.dolphin$|^org.kde.plasma-systemmonitor$|^blueman-manager$|^org.kde.konsole"] floating enable
        [app_id="^org.kde.okular$|^org.qutebrowser.qutebrowser$|^org.kde.kclock$"] floating enable
        [class="^Brave-browser$|^ZapZap$|^discord$"] floating enable
    }
    # Border padding
    titlebar_padding 1
    # <outer-border-color> <frame-color> <title-text-color> <next-tiling-indicator-color>
    client.focused #333333 #6600AA #DDDDDD #6600AA
    client.unfocused #333333 #666666 #DDDDDD #666666

### Additional configuration
include /etc/sway/config.d/*
# Documentation `man 5 sway`

